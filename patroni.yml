---
- name: Setup facts
  hosts: dcs_servers, pgsql_servers
  vars_files:
    - vars.yml
  handlers:
    - include: handlers.yml
  tasks:
    - include: tasks/set_dcs_ips.yml
      tags: always

# If you want to configure etcd with certificate based
# authentification, then you need to create and copy
# the certificates to the DCS servers and to the patroni
# servers.
#
# The certificates.yml playbook will set up a CA and
# create etcd certificates. You need to edit, configure
# and include that playbook here, if you want to have
# the certificates set up by that playbook.
#
# Please use a different mechanism for creating a CA
# and certificates if this one doesn't fit you.
#
#- import_playbook: certificates.yml

- name: Setup DCS servers
  hosts: dcs_servers
  vars_files:
    - vars.yml
  vars:
    # if you want to use certificate based authentication
    # for etcd, then you need to set:
    # use_certificates: true
    # requires `ca_dir` to be set
  handlers:
    - include: handlers.yml
  become: true
  become_user: root
  become_method: sudo
  roles:
    - {{ dcs }}


- name: Setup Postgres Servers
  hosts: pgsql_servers
  handlers:
    - include: handlers.yml
  become: true
  become_user: root
  become_method: sudo
  vars_files:
    - vars.yml

  pre_tasks:
    - name: Gather facts from ALL hosts (regardless of limit or tags)
      setup:
      delegate_to: "{{ item }}"
      delegate_facts: True
      when: hostvars[item]['ansible_default_ipv4'] is not defined
      with_items: "{{ [ groups['dcs_servers'], groups['pgsql_servers'] ] | flatten }}"
      tags:
        - config

  role:
    - role: consul
      when: dcs == "consul"
    - postgres
    - patroni
    # if you want to use Hetzner Floating or Failover IPs
    #- vip-manager-hetzner
