---

- block:

  - set_fact:
      patroni_config_file: "/etc/patroni/{{ postgresql_major_version }}-{{ postgresql_cluster_name }}.yml"
      vip_config_file:     "/etc/patroni/{{ postgresql_major_version }}-{{ postgresql_cluster_name }}.vip"
  
  - name: Create vip temp file (does not change the host)
    tempfile:
    register: vip_temp_file
    when: vip is defined and vip != ""
    
  - name: Make copy of vip config file (does not change the host)
    copy:
      remote_src: yes
      src: "{{ vip_config_file }}"
      dest: "{{ vip_temp_file.path }}"
    # never fail, first time there's no src
    failed_when: false
    when: vip is defined and vip != ""
  
  - name: Create patroni configuration
    include: replace_create_patroni_config_file.yml

# - name: Create patroni configuration
#   command: >
#     pg_createconfig_patroni
#       --force
#       --hostip={{ ansible_default_ipv4.address }}
#       {% if postgresql_port is defined         %}--port={{         postgresql_port         }}{% endif %}
#       {% if postgresql_network is defined      %}--network={{      postgresql_network      }}{% endif %}
#       {% if postgresql_repl_network is defined %}--repl-network={{ postgresql_repl_network }}{% endif %}
#       {% if vip is defined                     %}--vip={{          vip                     }}{% endif %}
#       {{ postgresql_major_version }}
#       {{ postgresql_cluster_name }}
  
  - name: Copy vip config to temp file (does not change the host)
    copy:
      remote_src: yes
      src: "{{ vip_config_file }}"
      dest: "{{ vip_temp_file.path }}"
    notify: restart vip-manager
    when: vip is defined and vip != ""
  
  - name: Delete vip temp file (does not change the host)
    file:
      path: "{{ vip_temp_file.path }}"
      state: absent
    when: vip is defined and vip != ""

  # block tag:
  tags: config
