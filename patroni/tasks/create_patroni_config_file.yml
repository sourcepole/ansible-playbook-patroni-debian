- name: sanity check, the requred initdb must exist
  command: "stat /usr/lib/postgresql/{{ postgresql_major_version }}/bin/initdb"
  check_mode: no # always run
  changed_when: false # doesn't change anything

- name: find port of the cluster if it is already running
  shell: "pg_lsclusters -h | grep -E '^{{ postgresql_major_version }}[[:space:]]+{{ postgresql_cluster_name }}[[:space:]]+' | awk '{print $3}'"
  check_mode: no # always run
  changed_when: false # doesn't change anything
  register: existing_port
  
- fail:
    msg: "the cluster is aparently already running on port {{ existing_port.stdout }} but not on the given port ({{ postgresql_port }})"
  when: existing_port.stdout != "" and existing_port.stdout != postgresql_port

- name: make sure port for new cluster is available
  # fail when grep was successful!
  shell: "pg_lsclusters -h | awk '{print $3}' | grep -q {{ postgresql_port }} || false "
  check_mode: no # always run
  changed_when: false # doesn't change anything
  when: existing_port.stdout == ""

- debug:
    msg: "Creating new cluster"
  when: existing_port.stdout == ""

# determine API port (default is 8008) by incrementing for each additional
# Postgres port.  2576 is 8008 - 5432.
- set_fact:
    api_port: "{{ 2576 + ( postgresql_port | int ) }}"

- name: create {{ patroni_config_file }}
  template:
    src: patroni.yml.j2
    dest: "{{ patroni_config_file }}"
    owner: postgres
    group: postgres
    mode: 0660
  notify: restart patroni
